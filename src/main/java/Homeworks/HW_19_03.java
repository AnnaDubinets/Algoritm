package Homeworks;

public class HW_19_03 {
    //1. Входные данные:

    //Список всех участников перевозки: волк, коза, капуста.
   // Информация о том, кто может съесть кого (например, волк может съесть козу, коза может съесть капусту).
    //Начальное расположение всех участников (например, берег, на который они должны попасть).
    //Первоначальное распределение ресурсов (например, капуста находится на одном берегу с козой, а волк на другом).

    // Выходные данные:

   // Список последовательности перемещений, которые нужно сделать для достижения цели (чтобы ни один участник не съел другого).
    //Информация о том, успешно ли прошла перевозка или нет.

    //Результатом функции shipping() может быть последовательность шагов, где каждый шаг представляет собой перемещение одного или нескольких участников с одного берега на другой. Каждый шаг должен быть таким образом, чтобы на одном берегу не осталось ситуации, когда коза остается с волком без надзора или коза остается с капустой без надзора.
}



//2. Написать алгоритм в виде блок-схемы или псевдокода следующей программы:
//На вход в переменные x, y, z поступают 3 целых числа. Определить, есть ли среди них хотя бы 2 одинаковых.

//1. Принять входные данные x, y, z.
       // 2. Если x равно y или x равно z или y равно z, то
//3.     Вернуть "Да" (есть хотя бы два одинаковых числа)
       // 4. Иначе
//5.     Вернуть "Нет" (нет двух одинаковых чисел)
